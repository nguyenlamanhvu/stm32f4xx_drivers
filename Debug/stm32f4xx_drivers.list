
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000083c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080009e4  080009ec  000109ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080009e4  080009e4  000109ec  2**0
                  CONTENTS
  4 .ARM          00000000  080009e4  080009e4  000109ec  2**0
                  CONTENTS
  5 .preinit_array 00000000  080009e4  080009ec  000109ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080009e4  080009e4  000109e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080009e8  080009e8  000109e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000109ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000109ec  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000109ec  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00010a1c  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000a13  00000000  00000000  00010a5f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000002b9  00000000  00000000  00011472  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000000c8  00000000  00000000  00011730  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 0000008b  00000000  00000000  000117f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  000014d0  00000000  00000000  00011883  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000ff4  00000000  00000000  00012d53  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0000582f  00000000  00000000  00013d47  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000268  00000000  00000000  00019578  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005a  00000000  00000000  000197e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080009cc 	.word	0x080009cc

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080009cc 	.word	0x080009cc

080001e8 <main>:
{
	for(int i=0; i< 1000000; i++);
}

int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b086      	sub	sp, #24
 80001ec:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, GPIOBtn;
	GpioLed.pGPIOx = GPIOD;
 80001ee:	4b14      	ldr	r3, [pc, #80]	; (8000240 <main+0x58>)
 80001f0:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80001f2:	2301      	movs	r3, #1
 80001f4:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 80001f6:	230c      	movs	r3, #12
 80001f8:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80001fa:	2300      	movs	r3, #0
 80001fc:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80001fe:	2302      	movs	r3, #2
 8000200:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000202:	2300      	movs	r3, #0
 8000204:	74fb      	strb	r3, [r7, #19]

	GPIO_Init(&GpioLed);
 8000206:	f107 030c 	add.w	r3, r7, #12
 800020a:	4618      	mov	r0, r3
 800020c:	f000 f93c 	bl	8000488 <GPIO_Init>

	GPIOBtn.pGPIOx = GPIOA;
 8000210:	4b0c      	ldr	r3, [pc, #48]	; (8000244 <main+0x5c>)
 8000212:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000214:	2304      	movs	r3, #4
 8000216:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000218:	2300      	movs	r3, #0
 800021a:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800021c:	2302      	movs	r3, #2
 800021e:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000220:	2300      	movs	r3, #0
 8000222:	71fb      	strb	r3, [r7, #7]

	GPIO_Init(&GPIOBtn);
 8000224:	463b      	mov	r3, r7
 8000226:	4618      	mov	r0, r3
 8000228:	f000 f92e 	bl	8000488 <GPIO_Init>

	//IRQ Configuration
	GPIO_IRQPriotrityConfig(IRQ_NO_EXTI0, NVIC_IRQ_PRI15);
 800022c:	210f      	movs	r1, #15
 800022e:	2006      	movs	r0, #6
 8000230:	f000 fb5e 	bl	80008f0 <GPIO_IRQPriotrityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI0, ENABLE);
 8000234:	2101      	movs	r1, #1
 8000236:	2006      	movs	r0, #6
 8000238:	f000 fad4 	bl	80007e4 <GPIO_IRQInterruptConfig>

	while(1);
 800023c:	e7fe      	b.n	800023c <main+0x54>
 800023e:	bf00      	nop
 8000240:	40020c00 	.word	0x40020c00
 8000244:	40020000 	.word	0x40020000

08000248 <EXTI0_IRQHandler>:
}

void EXTI0_IRQHandler(void)
{
 8000248:	b580      	push	{r7, lr}
 800024a:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_NO_0);
 800024c:	2000      	movs	r0, #0
 800024e:	f000 fb79 	bl	8000944 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 8000252:	210c      	movs	r1, #12
 8000254:	4802      	ldr	r0, [pc, #8]	; (8000260 <EXTI0_IRQHandler+0x18>)
 8000256:	f000 faaf 	bl	80007b8 <GPIO_ToggleOutputPin>
}
 800025a:	bf00      	nop
 800025c:	bd80      	pop	{r7, pc}
 800025e:	bf00      	nop
 8000260:	40020c00 	.word	0x40020c00

08000264 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000264:	480d      	ldr	r0, [pc, #52]	; (800029c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000266:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000268:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800026c:	480c      	ldr	r0, [pc, #48]	; (80002a0 <LoopForever+0x6>)
  ldr r1, =_edata
 800026e:	490d      	ldr	r1, [pc, #52]	; (80002a4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000270:	4a0d      	ldr	r2, [pc, #52]	; (80002a8 <LoopForever+0xe>)
  movs r3, #0
 8000272:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000274:	e002      	b.n	800027c <LoopCopyDataInit>

08000276 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000276:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000278:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800027a:	3304      	adds	r3, #4

0800027c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800027c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800027e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000280:	d3f9      	bcc.n	8000276 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000282:	4a0a      	ldr	r2, [pc, #40]	; (80002ac <LoopForever+0x12>)
  ldr r4, =_ebss
 8000284:	4c0a      	ldr	r4, [pc, #40]	; (80002b0 <LoopForever+0x16>)
  movs r3, #0
 8000286:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000288:	e001      	b.n	800028e <LoopFillZerobss>

0800028a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800028a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800028c:	3204      	adds	r2, #4

0800028e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800028e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000290:	d3fb      	bcc.n	800028a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000292:	f000 fb77 	bl	8000984 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000296:	f7ff ffa7 	bl	80001e8 <main>

0800029a <LoopForever>:

LoopForever:
  b LoopForever
 800029a:	e7fe      	b.n	800029a <LoopForever>
  ldr   r0, =_estack
 800029c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002a0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002a4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002a8:	080009ec 	.word	0x080009ec
  ldr r2, =_sbss
 80002ac:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b0:	2000001c 	.word	0x2000001c

080002b4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002b4:	e7fe      	b.n	80002b4 <ADC_IRQHandler>
	...

080002b8 <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002b8:	b480      	push	{r7}
 80002ba:	b083      	sub	sp, #12
 80002bc:	af00      	add	r7, sp, #0
 80002be:	6078      	str	r0, [r7, #4]
 80002c0:	460b      	mov	r3, r1
 80002c2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002c4:	78fb      	ldrb	r3, [r7, #3]
 80002c6:	2b01      	cmp	r3, #1
 80002c8:	d162      	bne.n	8000390 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)			GPIOA_PCLK_EN();
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	4a64      	ldr	r2, [pc, #400]	; (8000460 <GPIO_PeriClockControl+0x1a8>)
 80002ce:	4293      	cmp	r3, r2
 80002d0:	d106      	bne.n	80002e0 <GPIO_PeriClockControl+0x28>
 80002d2:	4b64      	ldr	r3, [pc, #400]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 80002d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d6:	4a63      	ldr	r2, [pc, #396]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 80002d8:	f043 0301 	orr.w	r3, r3, #1
 80002dc:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOF)	GPIOF_PCLK_DI();
		else if(pGPIOx == GPIOG)	GPIOG_PCLK_DI();
		else if(pGPIOx == GPIOH)	GPIOH_PCLK_DI();
		else if(pGPIOx == GPIOI)	GPIOI_PCLK_DI();
	}
}
 80002de:	e0b9      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)	GPIOB_PCLK_EN();
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	4a61      	ldr	r2, [pc, #388]	; (8000468 <GPIO_PeriClockControl+0x1b0>)
 80002e4:	4293      	cmp	r3, r2
 80002e6:	d106      	bne.n	80002f6 <GPIO_PeriClockControl+0x3e>
 80002e8:	4b5e      	ldr	r3, [pc, #376]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 80002ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ec:	4a5d      	ldr	r2, [pc, #372]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 80002ee:	f043 0302 	orr.w	r3, r3, #2
 80002f2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f4:	e0ae      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)	GPIOC_PCLK_EN();
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	4a5c      	ldr	r2, [pc, #368]	; (800046c <GPIO_PeriClockControl+0x1b4>)
 80002fa:	4293      	cmp	r3, r2
 80002fc:	d106      	bne.n	800030c <GPIO_PeriClockControl+0x54>
 80002fe:	4b59      	ldr	r3, [pc, #356]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 8000300:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000302:	4a58      	ldr	r2, [pc, #352]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 8000304:	f043 0304 	orr.w	r3, r3, #4
 8000308:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030a:	e0a3      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)	GPIOD_PCLK_EN();
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	4a58      	ldr	r2, [pc, #352]	; (8000470 <GPIO_PeriClockControl+0x1b8>)
 8000310:	4293      	cmp	r3, r2
 8000312:	d106      	bne.n	8000322 <GPIO_PeriClockControl+0x6a>
 8000314:	4b53      	ldr	r3, [pc, #332]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 8000316:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000318:	4a52      	ldr	r2, [pc, #328]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 800031a:	f043 0308 	orr.w	r3, r3, #8
 800031e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000320:	e098      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)	GPIOE_PCLK_EN();
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	4a53      	ldr	r2, [pc, #332]	; (8000474 <GPIO_PeriClockControl+0x1bc>)
 8000326:	4293      	cmp	r3, r2
 8000328:	d106      	bne.n	8000338 <GPIO_PeriClockControl+0x80>
 800032a:	4b4e      	ldr	r3, [pc, #312]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 800032c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032e:	4a4d      	ldr	r2, [pc, #308]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 8000330:	f043 0310 	orr.w	r3, r3, #16
 8000334:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000336:	e08d      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)	GPIOF_PCLK_EN();
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	4a4f      	ldr	r2, [pc, #316]	; (8000478 <GPIO_PeriClockControl+0x1c0>)
 800033c:	4293      	cmp	r3, r2
 800033e:	d106      	bne.n	800034e <GPIO_PeriClockControl+0x96>
 8000340:	4b48      	ldr	r3, [pc, #288]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 8000342:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000344:	4a47      	ldr	r2, [pc, #284]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 8000346:	f043 0320 	orr.w	r3, r3, #32
 800034a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034c:	e082      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)	GPIOG_PCLK_EN();
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	4a4a      	ldr	r2, [pc, #296]	; (800047c <GPIO_PeriClockControl+0x1c4>)
 8000352:	4293      	cmp	r3, r2
 8000354:	d106      	bne.n	8000364 <GPIO_PeriClockControl+0xac>
 8000356:	4b43      	ldr	r3, [pc, #268]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 8000358:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035a:	4a42      	ldr	r2, [pc, #264]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 800035c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000360:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000362:	e077      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)	GPIOH_PCLK_EN();
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	4a46      	ldr	r2, [pc, #280]	; (8000480 <GPIO_PeriClockControl+0x1c8>)
 8000368:	4293      	cmp	r3, r2
 800036a:	d106      	bne.n	800037a <GPIO_PeriClockControl+0xc2>
 800036c:	4b3d      	ldr	r3, [pc, #244]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 800036e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000370:	4a3c      	ldr	r2, [pc, #240]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 8000372:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000376:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000378:	e06c      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)	GPIOI_PCLK_EN();
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	4a41      	ldr	r2, [pc, #260]	; (8000484 <GPIO_PeriClockControl+0x1cc>)
 800037e:	4293      	cmp	r3, r2
 8000380:	d168      	bne.n	8000454 <GPIO_PeriClockControl+0x19c>
 8000382:	4b38      	ldr	r3, [pc, #224]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 8000384:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000386:	4a37      	ldr	r2, [pc, #220]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 8000388:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800038c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038e:	e061      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)			GPIOA_PCLK_DI();
 8000390:	687b      	ldr	r3, [r7, #4]
 8000392:	4a33      	ldr	r2, [pc, #204]	; (8000460 <GPIO_PeriClockControl+0x1a8>)
 8000394:	4293      	cmp	r3, r2
 8000396:	d106      	bne.n	80003a6 <GPIO_PeriClockControl+0xee>
 8000398:	4b32      	ldr	r3, [pc, #200]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 800039a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039c:	4a31      	ldr	r2, [pc, #196]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 800039e:	f023 0301 	bic.w	r3, r3, #1
 80003a2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a4:	e056      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)	GPIOB_PCLK_DI();
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	4a2f      	ldr	r2, [pc, #188]	; (8000468 <GPIO_PeriClockControl+0x1b0>)
 80003aa:	4293      	cmp	r3, r2
 80003ac:	d106      	bne.n	80003bc <GPIO_PeriClockControl+0x104>
 80003ae:	4b2d      	ldr	r3, [pc, #180]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 80003b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b2:	4a2c      	ldr	r2, [pc, #176]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 80003b4:	f023 0302 	bic.w	r3, r3, #2
 80003b8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ba:	e04b      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)	GPIOC_PCLK_DI();
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	4a2b      	ldr	r2, [pc, #172]	; (800046c <GPIO_PeriClockControl+0x1b4>)
 80003c0:	4293      	cmp	r3, r2
 80003c2:	d106      	bne.n	80003d2 <GPIO_PeriClockControl+0x11a>
 80003c4:	4b27      	ldr	r3, [pc, #156]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 80003c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c8:	4a26      	ldr	r2, [pc, #152]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 80003ca:	f023 0304 	bic.w	r3, r3, #4
 80003ce:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d0:	e040      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)	GPIOD_PCLK_DI();
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	4a26      	ldr	r2, [pc, #152]	; (8000470 <GPIO_PeriClockControl+0x1b8>)
 80003d6:	4293      	cmp	r3, r2
 80003d8:	d106      	bne.n	80003e8 <GPIO_PeriClockControl+0x130>
 80003da:	4b22      	ldr	r3, [pc, #136]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 80003dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003de:	4a21      	ldr	r2, [pc, #132]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 80003e0:	f023 0308 	bic.w	r3, r3, #8
 80003e4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e6:	e035      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)	GPIOE_PCLK_DI();
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	4a22      	ldr	r2, [pc, #136]	; (8000474 <GPIO_PeriClockControl+0x1bc>)
 80003ec:	4293      	cmp	r3, r2
 80003ee:	d106      	bne.n	80003fe <GPIO_PeriClockControl+0x146>
 80003f0:	4b1c      	ldr	r3, [pc, #112]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 80003f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f4:	4a1b      	ldr	r2, [pc, #108]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 80003f6:	f023 0310 	bic.w	r3, r3, #16
 80003fa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003fc:	e02a      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)	GPIOF_PCLK_DI();
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	4a1d      	ldr	r2, [pc, #116]	; (8000478 <GPIO_PeriClockControl+0x1c0>)
 8000402:	4293      	cmp	r3, r2
 8000404:	d106      	bne.n	8000414 <GPIO_PeriClockControl+0x15c>
 8000406:	4b17      	ldr	r3, [pc, #92]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 8000408:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800040a:	4a16      	ldr	r2, [pc, #88]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 800040c:	f023 0320 	bic.w	r3, r3, #32
 8000410:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000412:	e01f      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)	GPIOG_PCLK_DI();
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	4a19      	ldr	r2, [pc, #100]	; (800047c <GPIO_PeriClockControl+0x1c4>)
 8000418:	4293      	cmp	r3, r2
 800041a:	d106      	bne.n	800042a <GPIO_PeriClockControl+0x172>
 800041c:	4b11      	ldr	r3, [pc, #68]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 800041e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000420:	4a10      	ldr	r2, [pc, #64]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 8000422:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000426:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000428:	e014      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)	GPIOH_PCLK_DI();
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	4a14      	ldr	r2, [pc, #80]	; (8000480 <GPIO_PeriClockControl+0x1c8>)
 800042e:	4293      	cmp	r3, r2
 8000430:	d106      	bne.n	8000440 <GPIO_PeriClockControl+0x188>
 8000432:	4b0c      	ldr	r3, [pc, #48]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 8000434:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000436:	4a0b      	ldr	r2, [pc, #44]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 8000438:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800043c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800043e:	e009      	b.n	8000454 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)	GPIOI_PCLK_DI();
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	4a10      	ldr	r2, [pc, #64]	; (8000484 <GPIO_PeriClockControl+0x1cc>)
 8000444:	4293      	cmp	r3, r2
 8000446:	d105      	bne.n	8000454 <GPIO_PeriClockControl+0x19c>
 8000448:	4b06      	ldr	r3, [pc, #24]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 800044a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800044c:	4a05      	ldr	r2, [pc, #20]	; (8000464 <GPIO_PeriClockControl+0x1ac>)
 800044e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000452:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000454:	bf00      	nop
 8000456:	370c      	adds	r7, #12
 8000458:	46bd      	mov	sp, r7
 800045a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800045e:	4770      	bx	lr
 8000460:	40020000 	.word	0x40020000
 8000464:	40023800 	.word	0x40023800
 8000468:	40020400 	.word	0x40020400
 800046c:	40020800 	.word	0x40020800
 8000470:	40020c00 	.word	0x40020c00
 8000474:	40021000 	.word	0x40021000
 8000478:	40021400 	.word	0x40021400
 800047c:	40021800 	.word	0x40021800
 8000480:	40021c00 	.word	0x40021c00
 8000484:	40022000 	.word	0x40022000

08000488 <GPIO_Init>:
 *
 * @Note              - none

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000488:	b580      	push	{r7, lr}
 800048a:	b086      	sub	sp, #24
 800048c:	af00      	add	r7, sp, #0
 800048e:	6078      	str	r0, [r7, #4]
	uint32_t temp=0; 	//temp register
 8000490:	2300      	movs	r3, #0
 8000492:	617b      	str	r3, [r7, #20]
	//enable the peripheral clock
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	681b      	ldr	r3, [r3, #0]
 8000498:	2101      	movs	r1, #1
 800049a:	4618      	mov	r0, r3
 800049c:	f7ff ff0c 	bl	80002b8 <GPIO_PeriClockControl>
	//1. configure the mode of GPIO PIN
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)	// the non interrupt mode
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	795b      	ldrb	r3, [r3, #5]
 80004a4:	2b03      	cmp	r3, #3
 80004a6:	d820      	bhi.n	80004ea <GPIO_Init+0x62>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	795b      	ldrb	r3, [r3, #5]
 80004ac:	461a      	mov	r2, r3
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	791b      	ldrb	r3, [r3, #4]
 80004b2:	005b      	lsls	r3, r3, #1
 80004b4:	fa02 f303 	lsl.w	r3, r2, r3
 80004b8:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));	//clearing
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	681a      	ldr	r2, [r3, #0]
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	791b      	ldrb	r3, [r3, #4]
 80004c4:	005b      	lsls	r3, r3, #1
 80004c6:	2103      	movs	r1, #3
 80004c8:	fa01 f303 	lsl.w	r3, r1, r3
 80004cc:	43db      	mvns	r3, r3
 80004ce:	4619      	mov	r1, r3
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	400a      	ands	r2, r1
 80004d6:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;		//setting
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	6819      	ldr	r1, [r3, #0]
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	681b      	ldr	r3, [r3, #0]
 80004e2:	697a      	ldr	r2, [r7, #20]
 80004e4:	430a      	orrs	r2, r1
 80004e6:	601a      	str	r2, [r3, #0]
 80004e8:	e0c8      	b.n	800067c <GPIO_Init+0x1f4>
	} else																// this is interrupt mode
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	795b      	ldrb	r3, [r3, #5]
 80004ee:	2b04      	cmp	r3, #4
 80004f0:	d117      	bne.n	8000522 <GPIO_Init+0x9a>
		{
			//1. configure the FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004f2:	4b47      	ldr	r3, [pc, #284]	; (8000610 <GPIO_Init+0x188>)
 80004f4:	68db      	ldr	r3, [r3, #12]
 80004f6:	687a      	ldr	r2, [r7, #4]
 80004f8:	7912      	ldrb	r2, [r2, #4]
 80004fa:	4611      	mov	r1, r2
 80004fc:	2201      	movs	r2, #1
 80004fe:	408a      	lsls	r2, r1
 8000500:	4611      	mov	r1, r2
 8000502:	4a43      	ldr	r2, [pc, #268]	; (8000610 <GPIO_Init+0x188>)
 8000504:	430b      	orrs	r3, r1
 8000506:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000508:	4b41      	ldr	r3, [pc, #260]	; (8000610 <GPIO_Init+0x188>)
 800050a:	689b      	ldr	r3, [r3, #8]
 800050c:	687a      	ldr	r2, [r7, #4]
 800050e:	7912      	ldrb	r2, [r2, #4]
 8000510:	4611      	mov	r1, r2
 8000512:	2201      	movs	r2, #1
 8000514:	408a      	lsls	r2, r1
 8000516:	43d2      	mvns	r2, r2
 8000518:	4611      	mov	r1, r2
 800051a:	4a3d      	ldr	r2, [pc, #244]	; (8000610 <GPIO_Init+0x188>)
 800051c:	400b      	ands	r3, r1
 800051e:	6093      	str	r3, [r2, #8]
 8000520:	e035      	b.n	800058e <GPIO_Init+0x106>
		} else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	795b      	ldrb	r3, [r3, #5]
 8000526:	2b05      	cmp	r3, #5
 8000528:	d117      	bne.n	800055a <GPIO_Init+0xd2>
		{
			//1. configure the RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800052a:	4b39      	ldr	r3, [pc, #228]	; (8000610 <GPIO_Init+0x188>)
 800052c:	689b      	ldr	r3, [r3, #8]
 800052e:	687a      	ldr	r2, [r7, #4]
 8000530:	7912      	ldrb	r2, [r2, #4]
 8000532:	4611      	mov	r1, r2
 8000534:	2201      	movs	r2, #1
 8000536:	408a      	lsls	r2, r1
 8000538:	4611      	mov	r1, r2
 800053a:	4a35      	ldr	r2, [pc, #212]	; (8000610 <GPIO_Init+0x188>)
 800053c:	430b      	orrs	r3, r1
 800053e:	6093      	str	r3, [r2, #8]
			//Clear the corresponding FTSR bit
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000540:	4b33      	ldr	r3, [pc, #204]	; (8000610 <GPIO_Init+0x188>)
 8000542:	68db      	ldr	r3, [r3, #12]
 8000544:	687a      	ldr	r2, [r7, #4]
 8000546:	7912      	ldrb	r2, [r2, #4]
 8000548:	4611      	mov	r1, r2
 800054a:	2201      	movs	r2, #1
 800054c:	408a      	lsls	r2, r1
 800054e:	43d2      	mvns	r2, r2
 8000550:	4611      	mov	r1, r2
 8000552:	4a2f      	ldr	r2, [pc, #188]	; (8000610 <GPIO_Init+0x188>)
 8000554:	400b      	ands	r3, r1
 8000556:	60d3      	str	r3, [r2, #12]
 8000558:	e019      	b.n	800058e <GPIO_Init+0x106>
		} else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	795b      	ldrb	r3, [r3, #5]
 800055e:	2b06      	cmp	r3, #6
 8000560:	d115      	bne.n	800058e <GPIO_Init+0x106>
		{
			//1. configure both FTSR and RTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000562:	4b2b      	ldr	r3, [pc, #172]	; (8000610 <GPIO_Init+0x188>)
 8000564:	68db      	ldr	r3, [r3, #12]
 8000566:	687a      	ldr	r2, [r7, #4]
 8000568:	7912      	ldrb	r2, [r2, #4]
 800056a:	4611      	mov	r1, r2
 800056c:	2201      	movs	r2, #1
 800056e:	408a      	lsls	r2, r1
 8000570:	4611      	mov	r1, r2
 8000572:	4a27      	ldr	r2, [pc, #156]	; (8000610 <GPIO_Init+0x188>)
 8000574:	430b      	orrs	r3, r1
 8000576:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000578:	4b25      	ldr	r3, [pc, #148]	; (8000610 <GPIO_Init+0x188>)
 800057a:	689b      	ldr	r3, [r3, #8]
 800057c:	687a      	ldr	r2, [r7, #4]
 800057e:	7912      	ldrb	r2, [r2, #4]
 8000580:	4611      	mov	r1, r2
 8000582:	2201      	movs	r2, #1
 8000584:	408a      	lsls	r2, r1
 8000586:	4611      	mov	r1, r2
 8000588:	4a21      	ldr	r2, [pc, #132]	; (8000610 <GPIO_Init+0x188>)
 800058a:	430b      	orrs	r3, r1
 800058c:	6093      	str	r3, [r2, #8]
		}
		//2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	791b      	ldrb	r3, [r3, #4]
 8000592:	089b      	lsrs	r3, r3, #2
 8000594:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	791b      	ldrb	r3, [r3, #4]
 800059a:	f003 0303 	and.w	r3, r3, #3
 800059e:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	681b      	ldr	r3, [r3, #0]
 80005a4:	4a1b      	ldr	r2, [pc, #108]	; (8000614 <GPIO_Init+0x18c>)
 80005a6:	4293      	cmp	r3, r2
 80005a8:	d044      	beq.n	8000634 <GPIO_Init+0x1ac>
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	4a1a      	ldr	r2, [pc, #104]	; (8000618 <GPIO_Init+0x190>)
 80005b0:	4293      	cmp	r3, r2
 80005b2:	d02b      	beq.n	800060c <GPIO_Init+0x184>
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	4a18      	ldr	r2, [pc, #96]	; (800061c <GPIO_Init+0x194>)
 80005ba:	4293      	cmp	r3, r2
 80005bc:	d024      	beq.n	8000608 <GPIO_Init+0x180>
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	681b      	ldr	r3, [r3, #0]
 80005c2:	4a17      	ldr	r2, [pc, #92]	; (8000620 <GPIO_Init+0x198>)
 80005c4:	4293      	cmp	r3, r2
 80005c6:	d01d      	beq.n	8000604 <GPIO_Init+0x17c>
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	681b      	ldr	r3, [r3, #0]
 80005cc:	4a15      	ldr	r2, [pc, #84]	; (8000624 <GPIO_Init+0x19c>)
 80005ce:	4293      	cmp	r3, r2
 80005d0:	d016      	beq.n	8000600 <GPIO_Init+0x178>
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	4a14      	ldr	r2, [pc, #80]	; (8000628 <GPIO_Init+0x1a0>)
 80005d8:	4293      	cmp	r3, r2
 80005da:	d00f      	beq.n	80005fc <GPIO_Init+0x174>
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	4a12      	ldr	r2, [pc, #72]	; (800062c <GPIO_Init+0x1a4>)
 80005e2:	4293      	cmp	r3, r2
 80005e4:	d008      	beq.n	80005f8 <GPIO_Init+0x170>
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	4a11      	ldr	r2, [pc, #68]	; (8000630 <GPIO_Init+0x1a8>)
 80005ec:	4293      	cmp	r3, r2
 80005ee:	d101      	bne.n	80005f4 <GPIO_Init+0x16c>
 80005f0:	2307      	movs	r3, #7
 80005f2:	e020      	b.n	8000636 <GPIO_Init+0x1ae>
 80005f4:	2308      	movs	r3, #8
 80005f6:	e01e      	b.n	8000636 <GPIO_Init+0x1ae>
 80005f8:	2306      	movs	r3, #6
 80005fa:	e01c      	b.n	8000636 <GPIO_Init+0x1ae>
 80005fc:	2305      	movs	r3, #5
 80005fe:	e01a      	b.n	8000636 <GPIO_Init+0x1ae>
 8000600:	2304      	movs	r3, #4
 8000602:	e018      	b.n	8000636 <GPIO_Init+0x1ae>
 8000604:	2303      	movs	r3, #3
 8000606:	e016      	b.n	8000636 <GPIO_Init+0x1ae>
 8000608:	2302      	movs	r3, #2
 800060a:	e014      	b.n	8000636 <GPIO_Init+0x1ae>
 800060c:	2301      	movs	r3, #1
 800060e:	e012      	b.n	8000636 <GPIO_Init+0x1ae>
 8000610:	40013c00 	.word	0x40013c00
 8000614:	40020000 	.word	0x40020000
 8000618:	40020400 	.word	0x40020400
 800061c:	40020800 	.word	0x40020800
 8000620:	40020c00 	.word	0x40020c00
 8000624:	40021000 	.word	0x40021000
 8000628:	40021400 	.word	0x40021400
 800062c:	40021800 	.word	0x40021800
 8000630:	40021c00 	.word	0x40021c00
 8000634:	2300      	movs	r3, #0
 8000636:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000638:	4b5c      	ldr	r3, [pc, #368]	; (80007ac <GPIO_Init+0x324>)
 800063a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800063c:	4a5b      	ldr	r2, [pc, #364]	; (80007ac <GPIO_Init+0x324>)
 800063e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000642:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] |= portcode <<(temp2 * 4);
 8000644:	4a5a      	ldr	r2, [pc, #360]	; (80007b0 <GPIO_Init+0x328>)
 8000646:	7cfb      	ldrb	r3, [r7, #19]
 8000648:	3302      	adds	r3, #2
 800064a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800064e:	7c79      	ldrb	r1, [r7, #17]
 8000650:	7cbb      	ldrb	r3, [r7, #18]
 8000652:	009b      	lsls	r3, r3, #2
 8000654:	fa01 f303 	lsl.w	r3, r1, r3
 8000658:	4618      	mov	r0, r3
 800065a:	4955      	ldr	r1, [pc, #340]	; (80007b0 <GPIO_Init+0x328>)
 800065c:	7cfb      	ldrb	r3, [r7, #19]
 800065e:	4302      	orrs	r2, r0
 8000660:	3302      	adds	r3, #2
 8000662:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		//3 . enable the exti interrupt delivery using IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000666:	4b53      	ldr	r3, [pc, #332]	; (80007b4 <GPIO_Init+0x32c>)
 8000668:	681b      	ldr	r3, [r3, #0]
 800066a:	687a      	ldr	r2, [r7, #4]
 800066c:	7912      	ldrb	r2, [r2, #4]
 800066e:	4611      	mov	r1, r2
 8000670:	2201      	movs	r2, #1
 8000672:	408a      	lsls	r2, r1
 8000674:	4611      	mov	r1, r2
 8000676:	4a4f      	ldr	r2, [pc, #316]	; (80007b4 <GPIO_Init+0x32c>)
 8000678:	430b      	orrs	r3, r1
 800067a:	6013      	str	r3, [r2, #0]
	}
	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	799b      	ldrb	r3, [r3, #6]
 8000680:	461a      	mov	r2, r3
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	791b      	ldrb	r3, [r3, #4]
 8000686:	005b      	lsls	r3, r3, #1
 8000688:	fa02 f303 	lsl.w	r3, r2, r3
 800068c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));	//clearing
 800068e:	687b      	ldr	r3, [r7, #4]
 8000690:	681b      	ldr	r3, [r3, #0]
 8000692:	689a      	ldr	r2, [r3, #8]
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	791b      	ldrb	r3, [r3, #4]
 8000698:	005b      	lsls	r3, r3, #1
 800069a:	2103      	movs	r1, #3
 800069c:	fa01 f303 	lsl.w	r3, r1, r3
 80006a0:	43db      	mvns	r3, r3
 80006a2:	4619      	mov	r1, r3
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	681b      	ldr	r3, [r3, #0]
 80006a8:	400a      	ands	r2, r1
 80006aa:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp; //setting
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	6899      	ldr	r1, [r3, #8]
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	681b      	ldr	r3, [r3, #0]
 80006b6:	697a      	ldr	r2, [r7, #20]
 80006b8:	430a      	orrs	r2, r1
 80006ba:	609a      	str	r2, [r3, #8]
	//3. configure the PUPD settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	79db      	ldrb	r3, [r3, #7]
 80006c0:	461a      	mov	r2, r3
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	791b      	ldrb	r3, [r3, #4]
 80006c6:	005b      	lsls	r3, r3, #1
 80006c8:	fa02 f303 	lsl.w	r3, r2, r3
 80006cc:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 <<(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));	//clearing
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	681b      	ldr	r3, [r3, #0]
 80006d2:	68da      	ldr	r2, [r3, #12]
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	791b      	ldrb	r3, [r3, #4]
 80006d8:	005b      	lsls	r3, r3, #1
 80006da:	2103      	movs	r1, #3
 80006dc:	fa01 f303 	lsl.w	r3, r1, r3
 80006e0:	43db      	mvns	r3, r3
 80006e2:	4619      	mov	r1, r3
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	681b      	ldr	r3, [r3, #0]
 80006e8:	400a      	ands	r2, r1
 80006ea:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp; //setting
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	681b      	ldr	r3, [r3, #0]
 80006f0:	68d9      	ldr	r1, [r3, #12]
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	697a      	ldr	r2, [r7, #20]
 80006f8:	430a      	orrs	r2, r1
 80006fa:	60da      	str	r2, [r3, #12]
	//4. configure the output type (push-pull or open-drain)
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	7a1b      	ldrb	r3, [r3, #8]
 8000700:	461a      	mov	r2, r3
 8000702:	687b      	ldr	r3, [r7, #4]
 8000704:	791b      	ldrb	r3, [r3, #4]
 8000706:	fa02 f303 	lsl.w	r3, r2, r3
 800070a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 <<(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));	//clearing
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	681b      	ldr	r3, [r3, #0]
 8000710:	685a      	ldr	r2, [r3, #4]
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	791b      	ldrb	r3, [r3, #4]
 8000716:	4619      	mov	r1, r3
 8000718:	2301      	movs	r3, #1
 800071a:	408b      	lsls	r3, r1
 800071c:	43db      	mvns	r3, r3
 800071e:	4619      	mov	r1, r3
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	681b      	ldr	r3, [r3, #0]
 8000724:	400a      	ands	r2, r1
 8000726:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp; //setting
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	6859      	ldr	r1, [r3, #4]
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	681b      	ldr	r3, [r3, #0]
 8000732:	697a      	ldr	r2, [r7, #20]
 8000734:	430a      	orrs	r2, r1
 8000736:	605a      	str	r2, [r3, #4]
	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	795b      	ldrb	r3, [r3, #5]
 800073c:	2b02      	cmp	r3, #2
 800073e:	d131      	bne.n	80007a4 <GPIO_Init+0x31c>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;
		temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8);		//to know ALT[0] or ALT[1]
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	791b      	ldrb	r3, [r3, #4]
 8000744:	08db      	lsrs	r3, r3, #3
 8000746:	743b      	strb	r3, [r7, #16]
		temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8);		//to know the pin number in the ALT[0] or ALT[1]
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	791b      	ldrb	r3, [r3, #4]
 800074c:	f003 0307 	and.w	r3, r3, #7
 8000750:	73fb      	strb	r3, [r7, #15]

		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));		//clearing
 8000752:	687b      	ldr	r3, [r7, #4]
 8000754:	681b      	ldr	r3, [r3, #0]
 8000756:	7c3a      	ldrb	r2, [r7, #16]
 8000758:	3208      	adds	r2, #8
 800075a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800075e:	7bfb      	ldrb	r3, [r7, #15]
 8000760:	009b      	lsls	r3, r3, #2
 8000762:	220f      	movs	r2, #15
 8000764:	fa02 f303 	lsl.w	r3, r2, r3
 8000768:	43db      	mvns	r3, r3
 800076a:	4618      	mov	r0, r3
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	7c3a      	ldrb	r2, [r7, #16]
 8000772:	4001      	ands	r1, r0
 8000774:	3208      	adds	r2, #8
 8000776:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode 	<< (4 * temp2));;
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	681b      	ldr	r3, [r3, #0]
 800077e:	7c3a      	ldrb	r2, [r7, #16]
 8000780:	3208      	adds	r2, #8
 8000782:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000786:	687b      	ldr	r3, [r7, #4]
 8000788:	7a5b      	ldrb	r3, [r3, #9]
 800078a:	461a      	mov	r2, r3
 800078c:	7bfb      	ldrb	r3, [r7, #15]
 800078e:	009b      	lsls	r3, r3, #2
 8000790:	fa02 f303 	lsl.w	r3, r2, r3
 8000794:	4618      	mov	r0, r3
 8000796:	687b      	ldr	r3, [r7, #4]
 8000798:	681b      	ldr	r3, [r3, #0]
 800079a:	7c3a      	ldrb	r2, [r7, #16]
 800079c:	4301      	orrs	r1, r0
 800079e:	3208      	adds	r2, #8
 80007a0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80007a4:	bf00      	nop
 80007a6:	3718      	adds	r7, #24
 80007a8:	46bd      	mov	sp, r7
 80007aa:	bd80      	pop	{r7, pc}
 80007ac:	40023800 	.word	0x40023800
 80007b0:	40003800 	.word	0x40003800
 80007b4:	40013c00 	.word	0x40013c00

080007b8 <GPIO_ToggleOutputPin>:
 *
 * @Note              - none

 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80007b8:	b480      	push	{r7}
 80007ba:	b083      	sub	sp, #12
 80007bc:	af00      	add	r7, sp, #0
 80007be:	6078      	str	r0, [r7, #4]
 80007c0:	460b      	mov	r3, r1
 80007c2:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 80007c4:	687b      	ldr	r3, [r7, #4]
 80007c6:	695b      	ldr	r3, [r3, #20]
 80007c8:	78fa      	ldrb	r2, [r7, #3]
 80007ca:	2101      	movs	r1, #1
 80007cc:	fa01 f202 	lsl.w	r2, r1, r2
 80007d0:	405a      	eors	r2, r3
 80007d2:	687b      	ldr	r3, [r7, #4]
 80007d4:	615a      	str	r2, [r3, #20]
}
 80007d6:	bf00      	nop
 80007d8:	370c      	adds	r7, #12
 80007da:	46bd      	mov	sp, r7
 80007dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007e0:	4770      	bx	lr
	...

080007e4 <GPIO_IRQInterruptConfig>:
 *
 * @Note              -

 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 80007e4:	b480      	push	{r7}
 80007e6:	b083      	sub	sp, #12
 80007e8:	af00      	add	r7, sp, #0
 80007ea:	4603      	mov	r3, r0
 80007ec:	460a      	mov	r2, r1
 80007ee:	71fb      	strb	r3, [r7, #7]
 80007f0:	4613      	mov	r3, r2
 80007f2:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 80007f4:	79bb      	ldrb	r3, [r7, #6]
 80007f6:	2b01      	cmp	r3, #1
 80007f8:	d133      	bne.n	8000862 <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <= 31)
 80007fa:	79fb      	ldrb	r3, [r7, #7]
 80007fc:	2b1f      	cmp	r3, #31
 80007fe:	d80a      	bhi.n	8000816 <GPIO_IRQInterruptConfig+0x32>
		{
			//program ISER0 register
			*NVIC_ISER0 |= (1 << IRQNumber);
 8000800:	4b35      	ldr	r3, [pc, #212]	; (80008d8 <GPIO_IRQInterruptConfig+0xf4>)
 8000802:	681b      	ldr	r3, [r3, #0]
 8000804:	79fa      	ldrb	r2, [r7, #7]
 8000806:	2101      	movs	r1, #1
 8000808:	fa01 f202 	lsl.w	r2, r1, r2
 800080c:	4611      	mov	r1, r2
 800080e:	4a32      	ldr	r2, [pc, #200]	; (80008d8 <GPIO_IRQInterruptConfig+0xf4>)
 8000810:	430b      	orrs	r3, r1
 8000812:	6013      	str	r3, [r2, #0]
		{
			//program ICER2 register
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
		}
	}
}
 8000814:	e059      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
		} else if(IRQNumber > 31 && IRQNumber < 64)
 8000816:	79fb      	ldrb	r3, [r7, #7]
 8000818:	2b1f      	cmp	r3, #31
 800081a:	d90f      	bls.n	800083c <GPIO_IRQInterruptConfig+0x58>
 800081c:	79fb      	ldrb	r3, [r7, #7]
 800081e:	2b3f      	cmp	r3, #63	; 0x3f
 8000820:	d80c      	bhi.n	800083c <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 8000822:	4b2e      	ldr	r3, [pc, #184]	; (80008dc <GPIO_IRQInterruptConfig+0xf8>)
 8000824:	681b      	ldr	r3, [r3, #0]
 8000826:	79fa      	ldrb	r2, [r7, #7]
 8000828:	f002 021f 	and.w	r2, r2, #31
 800082c:	2101      	movs	r1, #1
 800082e:	fa01 f202 	lsl.w	r2, r1, r2
 8000832:	4611      	mov	r1, r2
 8000834:	4a29      	ldr	r2, [pc, #164]	; (80008dc <GPIO_IRQInterruptConfig+0xf8>)
 8000836:	430b      	orrs	r3, r1
 8000838:	6013      	str	r3, [r2, #0]
 800083a:	e046      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
		} else if(IRQNumber >= 64 && IRQNumber <96)
 800083c:	79fb      	ldrb	r3, [r7, #7]
 800083e:	2b3f      	cmp	r3, #63	; 0x3f
 8000840:	d943      	bls.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
 8000842:	79fb      	ldrb	r3, [r7, #7]
 8000844:	2b5f      	cmp	r3, #95	; 0x5f
 8000846:	d840      	bhi.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << (IRQNumber % 64));
 8000848:	4b25      	ldr	r3, [pc, #148]	; (80008e0 <GPIO_IRQInterruptConfig+0xfc>)
 800084a:	681b      	ldr	r3, [r3, #0]
 800084c:	79fa      	ldrb	r2, [r7, #7]
 800084e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000852:	2101      	movs	r1, #1
 8000854:	fa01 f202 	lsl.w	r2, r1, r2
 8000858:	4611      	mov	r1, r2
 800085a:	4a21      	ldr	r2, [pc, #132]	; (80008e0 <GPIO_IRQInterruptConfig+0xfc>)
 800085c:	430b      	orrs	r3, r1
 800085e:	6013      	str	r3, [r2, #0]
}
 8000860:	e033      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31)
 8000862:	79fb      	ldrb	r3, [r7, #7]
 8000864:	2b1f      	cmp	r3, #31
 8000866:	d80a      	bhi.n	800087e <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 8000868:	4b1e      	ldr	r3, [pc, #120]	; (80008e4 <GPIO_IRQInterruptConfig+0x100>)
 800086a:	681b      	ldr	r3, [r3, #0]
 800086c:	79fa      	ldrb	r2, [r7, #7]
 800086e:	2101      	movs	r1, #1
 8000870:	fa01 f202 	lsl.w	r2, r1, r2
 8000874:	4611      	mov	r1, r2
 8000876:	4a1b      	ldr	r2, [pc, #108]	; (80008e4 <GPIO_IRQInterruptConfig+0x100>)
 8000878:	430b      	orrs	r3, r1
 800087a:	6013      	str	r3, [r2, #0]
}
 800087c:	e025      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
		} else if(IRQNumber > 31 && IRQNumber < 64)
 800087e:	79fb      	ldrb	r3, [r7, #7]
 8000880:	2b1f      	cmp	r3, #31
 8000882:	d90f      	bls.n	80008a4 <GPIO_IRQInterruptConfig+0xc0>
 8000884:	79fb      	ldrb	r3, [r7, #7]
 8000886:	2b3f      	cmp	r3, #63	; 0x3f
 8000888:	d80c      	bhi.n	80008a4 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
 800088a:	4b17      	ldr	r3, [pc, #92]	; (80008e8 <GPIO_IRQInterruptConfig+0x104>)
 800088c:	681b      	ldr	r3, [r3, #0]
 800088e:	79fa      	ldrb	r2, [r7, #7]
 8000890:	f002 021f 	and.w	r2, r2, #31
 8000894:	2101      	movs	r1, #1
 8000896:	fa01 f202 	lsl.w	r2, r1, r2
 800089a:	4611      	mov	r1, r2
 800089c:	4a12      	ldr	r2, [pc, #72]	; (80008e8 <GPIO_IRQInterruptConfig+0x104>)
 800089e:	430b      	orrs	r3, r1
 80008a0:	6013      	str	r3, [r2, #0]
 80008a2:	e012      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
		} else if(IRQNumber >= 64 && IRQNumber <96)
 80008a4:	79fb      	ldrb	r3, [r7, #7]
 80008a6:	2b3f      	cmp	r3, #63	; 0x3f
 80008a8:	d90f      	bls.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
 80008aa:	79fb      	ldrb	r3, [r7, #7]
 80008ac:	2b5f      	cmp	r3, #95	; 0x5f
 80008ae:	d80c      	bhi.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
 80008b0:	4b0e      	ldr	r3, [pc, #56]	; (80008ec <GPIO_IRQInterruptConfig+0x108>)
 80008b2:	681b      	ldr	r3, [r3, #0]
 80008b4:	79fa      	ldrb	r2, [r7, #7]
 80008b6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008ba:	2101      	movs	r1, #1
 80008bc:	fa01 f202 	lsl.w	r2, r1, r2
 80008c0:	4611      	mov	r1, r2
 80008c2:	4a0a      	ldr	r2, [pc, #40]	; (80008ec <GPIO_IRQInterruptConfig+0x108>)
 80008c4:	430b      	orrs	r3, r1
 80008c6:	6013      	str	r3, [r2, #0]
}
 80008c8:	e7ff      	b.n	80008ca <GPIO_IRQInterruptConfig+0xe6>
 80008ca:	bf00      	nop
 80008cc:	370c      	adds	r7, #12
 80008ce:	46bd      	mov	sp, r7
 80008d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008d4:	4770      	bx	lr
 80008d6:	bf00      	nop
 80008d8:	e000e100 	.word	0xe000e100
 80008dc:	e000e104 	.word	0xe000e104
 80008e0:	e000e108 	.word	0xe000e108
 80008e4:	e000e180 	.word	0xe000e180
 80008e8:	e000e184 	.word	0xe000e184
 80008ec:	e000e188 	.word	0xe000e188

080008f0 <GPIO_IRQPriotrityConfig>:
 *
 * @Note              -

 */
void GPIO_IRQPriotrityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 80008f0:	b480      	push	{r7}
 80008f2:	b085      	sub	sp, #20
 80008f4:	af00      	add	r7, sp, #0
 80008f6:	4603      	mov	r3, r0
 80008f8:	6039      	str	r1, [r7, #0]
 80008fa:	71fb      	strb	r3, [r7, #7]
	//1. first let find out the ipr register
	uint8_t iprx = IRQNumber / 4;
 80008fc:	79fb      	ldrb	r3, [r7, #7]
 80008fe:	089b      	lsrs	r3, r3, #2
 8000900:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 8000902:	79fb      	ldrb	r3, [r7, #7]
 8000904:	f003 0303 	and.w	r3, r3, #3
 8000908:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 800090a:	7bbb      	ldrb	r3, [r7, #14]
 800090c:	00db      	lsls	r3, r3, #3
 800090e:	b2db      	uxtb	r3, r3
 8000910:	3304      	adds	r3, #4
 8000912:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + iprx) |= (IRQPriority << shift_amount);
 8000914:	7bfb      	ldrb	r3, [r7, #15]
 8000916:	009b      	lsls	r3, r3, #2
 8000918:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800091c:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000920:	6819      	ldr	r1, [r3, #0]
 8000922:	7b7b      	ldrb	r3, [r7, #13]
 8000924:	683a      	ldr	r2, [r7, #0]
 8000926:	409a      	lsls	r2, r3
 8000928:	7bfb      	ldrb	r3, [r7, #15]
 800092a:	009b      	lsls	r3, r3, #2
 800092c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000930:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000934:	430a      	orrs	r2, r1
 8000936:	601a      	str	r2, [r3, #0]
}
 8000938:	bf00      	nop
 800093a:	3714      	adds	r7, #20
 800093c:	46bd      	mov	sp, r7
 800093e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000942:	4770      	bx	lr

08000944 <GPIO_IRQHandling>:
 *
 * @Note              -

 */
void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000944:	b480      	push	{r7}
 8000946:	b083      	sub	sp, #12
 8000948:	af00      	add	r7, sp, #0
 800094a:	4603      	mov	r3, r0
 800094c:	71fb      	strb	r3, [r7, #7]
	//clear the exti pr register corresponding to the pin number
	if(EXTI->PR & (1 << PinNumber))
 800094e:	4b0c      	ldr	r3, [pc, #48]	; (8000980 <GPIO_IRQHandling+0x3c>)
 8000950:	695b      	ldr	r3, [r3, #20]
 8000952:	79fa      	ldrb	r2, [r7, #7]
 8000954:	2101      	movs	r1, #1
 8000956:	fa01 f202 	lsl.w	r2, r1, r2
 800095a:	4013      	ands	r3, r2
 800095c:	2b00      	cmp	r3, #0
 800095e:	d009      	beq.n	8000974 <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= (1 << PinNumber);
 8000960:	4b07      	ldr	r3, [pc, #28]	; (8000980 <GPIO_IRQHandling+0x3c>)
 8000962:	695b      	ldr	r3, [r3, #20]
 8000964:	79fa      	ldrb	r2, [r7, #7]
 8000966:	2101      	movs	r1, #1
 8000968:	fa01 f202 	lsl.w	r2, r1, r2
 800096c:	4611      	mov	r1, r2
 800096e:	4a04      	ldr	r2, [pc, #16]	; (8000980 <GPIO_IRQHandling+0x3c>)
 8000970:	430b      	orrs	r3, r1
 8000972:	6153      	str	r3, [r2, #20]
	}
}
 8000974:	bf00      	nop
 8000976:	370c      	adds	r7, #12
 8000978:	46bd      	mov	sp, r7
 800097a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800097e:	4770      	bx	lr
 8000980:	40013c00 	.word	0x40013c00

08000984 <__libc_init_array>:
 8000984:	b570      	push	{r4, r5, r6, lr}
 8000986:	4d0d      	ldr	r5, [pc, #52]	; (80009bc <__libc_init_array+0x38>)
 8000988:	4c0d      	ldr	r4, [pc, #52]	; (80009c0 <__libc_init_array+0x3c>)
 800098a:	1b64      	subs	r4, r4, r5
 800098c:	10a4      	asrs	r4, r4, #2
 800098e:	2600      	movs	r6, #0
 8000990:	42a6      	cmp	r6, r4
 8000992:	d109      	bne.n	80009a8 <__libc_init_array+0x24>
 8000994:	4d0b      	ldr	r5, [pc, #44]	; (80009c4 <__libc_init_array+0x40>)
 8000996:	4c0c      	ldr	r4, [pc, #48]	; (80009c8 <__libc_init_array+0x44>)
 8000998:	f000 f818 	bl	80009cc <_init>
 800099c:	1b64      	subs	r4, r4, r5
 800099e:	10a4      	asrs	r4, r4, #2
 80009a0:	2600      	movs	r6, #0
 80009a2:	42a6      	cmp	r6, r4
 80009a4:	d105      	bne.n	80009b2 <__libc_init_array+0x2e>
 80009a6:	bd70      	pop	{r4, r5, r6, pc}
 80009a8:	f855 3b04 	ldr.w	r3, [r5], #4
 80009ac:	4798      	blx	r3
 80009ae:	3601      	adds	r6, #1
 80009b0:	e7ee      	b.n	8000990 <__libc_init_array+0xc>
 80009b2:	f855 3b04 	ldr.w	r3, [r5], #4
 80009b6:	4798      	blx	r3
 80009b8:	3601      	adds	r6, #1
 80009ba:	e7f2      	b.n	80009a2 <__libc_init_array+0x1e>
 80009bc:	080009e4 	.word	0x080009e4
 80009c0:	080009e4 	.word	0x080009e4
 80009c4:	080009e4 	.word	0x080009e4
 80009c8:	080009e8 	.word	0x080009e8

080009cc <_init>:
 80009cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009ce:	bf00      	nop
 80009d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009d2:	bc08      	pop	{r3}
 80009d4:	469e      	mov	lr, r3
 80009d6:	4770      	bx	lr

080009d8 <_fini>:
 80009d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009da:	bf00      	nop
 80009dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009de:	bc08      	pop	{r3}
 80009e0:	469e      	mov	lr, r3
 80009e2:	4770      	bx	lr
